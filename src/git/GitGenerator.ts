import path from "node:path";

import PackageJson from "../../package.json";
import { BaseGenerator } from "../shared";
import GitHooksGenerator from "./git-hooks";

export class GitGenerator extends BaseGenerator {
  public static generateCommitMessage() {
    return `Add/update files generated by ${PackageJson.name} v${PackageJson.version}`;
  }

  public async writing() {
    await this.exec("git init");
    if (this.options.configGitUser === true) {
      await this.exec("git config user.email daniel@chiubaka.com");
      await this.exec('git config user.name "Daniel Chiu"');
    }
  }

  public async end() {
    const commitMessage = GitGenerator.generateCommitMessage();
    await this.exec("git add .");
    await this.exec(`git commit -m "${commitMessage}" --no-verify`);
  }

  protected configureSubGenerators = () => {
    return [
      {
        Generator: GitHooksGenerator,
        path: path.join(__dirname, "./git-hooks"),
      },
    ];
  };
}
