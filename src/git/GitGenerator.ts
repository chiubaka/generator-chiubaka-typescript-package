import path from "node:path";

import PackageJson from "../package.json";
import { BaseGenerator } from "../shared";
import GitHooksGenerator from "./git-hooks";

export class GitGenerator extends BaseGenerator {
  public writing() {
    this.spawnCommandSync("git", ["init"]);
    if (
      process.env.NODE_ENV === "test" &&
      this.options.configGitUser === true
    ) {
      this.spawnCommandSync("git", ["config", "user.email", "testing@jest.io"]);
      this.spawnCommandSync("git", ["config", "user.name", "Jest"]);
    }
  }

  public end() {
    const commitMessage = `Add/update files generated by ${PackageJson.name} v${PackageJson.version}`;

    this.spawnCommandSync("git", ["add", "."]);
    this.spawnCommandSync("git", [
      "commit",
      "-m",
      commitMessage,
      "--no-verify",
    ]);
  }

  protected getSubGeneratorOptions() {
    return [
      {
        Generator: GitHooksGenerator,
        path: path.join(__dirname, "./git-hooks"),
      },
    ];
  }
}
